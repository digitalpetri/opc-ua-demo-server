import java.text.SimpleDateFormat

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.71"
    id "org.beryx.runtime" version "1.8.0"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "com.palantir.git-version" version "0.12.2"
}

group "com.digitalpetri.opcua"
version "0.1"

sourceCompatibility = 1.8

project.ext {
    miloVersion = "0.4.0"
    packageName = "milo-demo-server"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    minimize {
        exclude dependency("org.bouncycastle:.*:.*")
        exclude dependency("org.jetbrains.kotlin:kotlin-reflect:.*")
    }
}

mainClassName = "com.digitalpetri.opcua.server/com.digitalpetri.opcua.server.MiloDemoServer"

application {
    mainClassName = "com.digitalpetri.opcua.server.MiloDemoServer"
    applicationName = "milo-demo-server"
}

jar {
    def details = versionDetails()

    manifest {
        attributes(
            "Main-Class": "com.digitalpetri.opcua.server.MiloDemoServer",
            "Implementation-Title": "milo-demo-server",
            "X-Stack-Version": "$miloVersion",
            "X-SDK-Version": "$miloVersion",
            "X-Server-Build-Date": getDate(),
            "X-Server-Build-Number": details.gitHash,
            "X-Server-Software-Version": project.version
        )
    }
}

static def getDate() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

runtime {
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages"]
    modules = [
        "jdk.management",
        "java.management",
        "java.sql",
        "java.naming",
        "java.logging",
        "java.xml",
        "jdk.unsupported"
    ]

    def platformSuffix = ""

    if (project.hasProperty("platform")) {
        platformSuffix = "-$platform"
    }

    imageDir = file("$buildDir/${packageName}")
    imageZip = file("$buildDir/${packageName}${platformSuffix}.zip")
}

task dist {
    dependsOn clean, runtimeZip
    description "Calls clean and then runtimeZip [default]"
}

defaultTasks "dist"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.5"

    implementation "org.eclipse.milo:sdk-client:$miloVersion"
    implementation "org.eclipse.milo:sdk-server:$miloVersion"
    implementation "org.eclipse.milo:dictionary-manager:$miloVersion"

    implementation "com.uchuhimo:konf:0.13.1"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "io.github.soc:directories:11"
}


